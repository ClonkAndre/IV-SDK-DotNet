<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ClonksCodingLib.GTAIV</name>
    </assembly>
    <members>
        <member name="T:CCL.GTAIV.ShootMode">
            <summary>
            Shoot modes
            </summary>
        </member>
        <member name="T:CCL.GTAIV.PedGender">
            <summary>
            Contains ped genders.
            </summary>
        </member>
        <member name="F:CCL.GTAIV.PedGender.Unkown">
            <summary>
            Unknown gender. You will only see this appearing when for example the <see cref="T:IVSDKDotNet.CPed"/> is <see langword="null"/>.
            </summary>
        </member>
        <member name="F:CCL.GTAIV.PedGender.Male">
            <summary>
            Ped is a male.
            </summary>
        </member>
        <member name="F:CCL.GTAIV.PedGender.Female">
            <summary>
            Ped is a female.
            </summary>
        </member>
        <member name="T:CCL.GTAIV.AnimationFlags">
            <summary>
            Flags that can be used to play animations.
            </summary>
        </member>
        <member name="F:CCL.GTAIV.AnimationFlags.None">
            <summary>None.</summary>
        </member>
        <member name="F:CCL.GTAIV.AnimationFlags.StayAtNewPosition">
            <summary>Don't come back to initial position after animation ends, we use this for animations that result in position change for the ped, for example the land and roll animation</summary>
        </member>
        <member name="F:CCL.GTAIV.AnimationFlags.Unknown02">
            <summary>Unknown.</summary>
        </member>
        <member name="F:CCL.GTAIV.AnimationFlags.Unknown03">
            <summary>Unknown.</summary>
        </member>
        <member name="F:CCL.GTAIV.AnimationFlags.ReturnToOriginalPosition">
            <summary>Not well tested but this might make the ped return to its original position.</summary>
        </member>
        <member name="F:CCL.GTAIV.AnimationFlags.Loop">
            <summary>This loops the animation.</summary>
        </member>
        <member name="F:CCL.GTAIV.AnimationFlags.FreezeAtLastFrame">
            <summary>The ped will play the animation, and then freezes in the last frame of the animation.</summary>
        </member>
        <member name="F:CCL.GTAIV.AnimationFlags.SwitchToIdleAnimAfterEnd">
            <summary>Seems that makes the ped reset to standing idle animation after the animation ends.</summary>
        </member>
        <member name="F:CCL.GTAIV.AnimationFlags.Unknown08">
            <summary>Unknown.</summary>
        </member>
        <member name="F:CCL.GTAIV.AnimationFlags.PlayInUpperBodyOnly">
            <summary>Plays the animation only in the upper body of the ped. Useful for when playing animation in cars.</summary>
        </member>
        <member name="F:CCL.GTAIV.AnimationFlags.RemoveSound">
            <summary>Removes the sound of the animation. Some animations have sound while others dont.</summary>
        </member>
        <member name="F:CCL.GTAIV.AnimationFlags.Unknown11">
            <summary>Unknown.</summary>
        </member>
        <member name="F:CCL.GTAIV.AnimationFlags.Unknown12">
            <summary>Unknown.</summary>
        </member>
        <member name="F:CCL.GTAIV.AnimationFlags.PlayInUpperBodyWithWalk">
            <summary>This makes the ped able to walk while an animation in playing in its upper body.</summary>
        </member>
        <member name="T:CCL.GTAIV.Episode">
            <summary>
            Contains all common episodes that are in GTA IV.
            </summary>
        </member>
        <member name="F:CCL.GTAIV.Episode.IV">
            <summary>GTA IV</summary>
        </member>
        <member name="F:CCL.GTAIV.Episode.TLaD">
            <summary>The Lost and Damned</summary>
        </member>
        <member name="F:CCL.GTAIV.Episode.TBoGT">
            <summary>The Ballad of Gay Tony</summary>
        </member>
        <member name="T:CCL.GTAIV.NetworkGameMode">
            <summary>
            Contains all common game modes that are in GTA IV and its Episodes.
            </summary>
        </member>
        <member name="T:CCL.GTAIV.GroundType">
            <summary>
            Contains ground types. Mainly used for the <see cref="M:CCL.GTAIV.NativeWorld.GetGroundZ(System.Numerics.Vector3,CCL.GTAIV.GroundType)"/> functions.
            </summary>
        </member>
        <member name="T:CCL.GTAIV.ControllerButton">
            <summary>
            Controller buttons.
            </summary>
        </member>
        <member name="T:CCL.GTAIV.GameKey">
            <summary>
            Game keys.
            </summary>
        </member>
        <member name="T:CCL.GTAIV.BlipIcon">
            <summary>
            Contains blip icons. Might miss episode icons.
            </summary>
        </member>
        <member name="M:CCL.GTAIV.CObjectExtensions.GetHandle(IVSDKDotNet.CObject)">
            <summary>
            Gets the handle for this <see cref="T:IVSDKDotNet.CObject"/>.
            <para>Can be used for calling native functions like <see cref="M:IVSDKDotNet.Native.Natives.DOES_OBJECT_EXIST(System.Int32)"/> which requires a ped handle.</para>
            </summary>
            <param name="obj"></param>
            <returns>If successful, the handle of this <see cref="T:IVSDKDotNet.CObject"/> is returned. Otherwise, 0.</returns>
        </member>
        <member name="T:CCL.GTAIV.ColorExtensions">
            <summary>
            Contains extensions for the <see cref="T:System.Drawing.Color"/> struct.
            </summary>
        </member>
        <member name="M:CCL.GTAIV.ColorExtensions.ToRgba(System.Drawing.Color)">
            <summary>
            Converts the given <see cref="T:System.Drawing.Color"/> struct to a 32-bit RGBA value for GTA IV.
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:CCL.GTAIV.ColorExtensions.RandomARGB(System.Drawing.Color)">
            <summary>
            Gives a random ARGB <see cref="T:System.Drawing.Color"/>.
            </summary>
            <param name="color"></param>
            <returns>The random <see cref="T:System.Drawing.Color"/>.</returns>
        </member>
        <member name="M:CCL.GTAIV.ColorExtensions.RandomRGB(System.Drawing.Color)">
            <summary>
            Gives a random RGB <see cref="T:System.Drawing.Color"/>.
            </summary>
            <param name="color"></param>
            <returns>The random <see cref="T:System.Drawing.Color"/>.</returns>
        </member>
        <member name="T:CCL.GTAIV.CPedExtensions">
            <summary>
            Contains extensions for the <see cref="T:IVSDKDotNet.CPed"/> class.
            </summary>
        </member>
        <member name="M:CCL.GTAIV.CPedExtensions.AddAmmoToChar(IVSDKDotNet.CPed,IVSDKDotNet.Enums.eWeaponType,System.UInt32)">
            <summary>
            Adds ammo to the given <paramref name="weapon"/> for this <see cref="T:IVSDKDotNet.CPed"/>.
            </summary>
            <param name="ped"></param>
            <param name="weapon">The weapon to fill up the ammo.</param>
            <param name="amount">The amount of ammo to fill up.</param>
        </member>
        <member name="M:CCL.GTAIV.CPedExtensions.AddArmourToChar(IVSDKDotNet.CPed,System.UInt32)">
            <summary>
            Adds armour to this <see cref="T:IVSDKDotNet.CPed"/>.
            </summary>
            <param name="ped"></param>
            <param name="amount">The amount of armour to fill up.</param>
        </member>
        <member name="M:CCL.GTAIV.CPedExtensions.PreventRagdoll(IVSDKDotNet.CPed,System.Boolean)">
            <summary>
            Sets if this <see cref="T:IVSDKDotNet.CPed"/> can ragdoll.
            </summary>
            <param name="ped"></param>
            <param name="value">Can ragdoll or not.</param>
        </member>
        <member name="M:CCL.GTAIV.CPedExtensions.GetHandle(IVSDKDotNet.CPed)">
            <summary>
            Gets the handle for this <see cref="T:IVSDKDotNet.CPed"/>.
            <para>Can be used for calling native functions like <see cref="M:IVSDKDotNet.Native.Natives.EXPLODE_CHAR_HEAD(System.Int32)"/> which requires a ped handle.</para>
            </summary>
            <param name="ped"></param>
            <returns>If successful, the handle of this <see cref="T:IVSDKDotNet.CPed"/> is returned. Otherwise, 0.</returns>
        </member>
        <member name="M:CCL.GTAIV.CPedExtensions.GetModelRect3D(IVSDKDotNet.CPed)">
            <summary>
            Gets the <see cref="T:CCL.GTAIV.Rectangle3D"/> (or bounds) of this <see cref="T:IVSDKDotNet.CPed"/> with their current model.
            </summary>
            <param name="ped"></param>
            <returns>If successful, the <see cref="T:CCL.GTAIV.Rectangle3D"/> of this <see cref="T:IVSDKDotNet.CPed"/> is returned. Otherwise, <see cref="M:CCL.GTAIV.Rectangle3D.Empty"/> is returned.</returns>
        </member>
        <member name="M:CCL.GTAIV.CPedExtensions.AreAnyCharsNearChar(IVSDKDotNet.CPed,System.Single)">
            <summary>
            Gets if there are any chars near this <see cref="T:IVSDKDotNet.CPed"/>.
            </summary>
            <param name="ped"></param>
            <param name="radius">The radius in which to search for.</param>
            <returns>True if there are any chars in the area around this <see cref="T:IVSDKDotNet.CPed"/>. Otherwise, false.</returns>
        </member>
        <member name="M:CCL.GTAIV.CPedExtensions.GetCharModel(IVSDKDotNet.CPed)">
            <summary>
            Gets the model of this <see cref="T:IVSDKDotNet.CPed"/>.
            </summary>
            <param name="ped"></param>
            <returns>The model of this <see cref="T:IVSDKDotNet.CPed"/>.</returns>
        </member>
        <member name="M:CCL.GTAIV.CPedExtensions.GetCharGender(IVSDKDotNet.CPed)">
            <summary>
            Gets the gender of this <see cref="T:IVSDKDotNet.CPed"/>.
            </summary>
            <param name="ped"></param>
            <returns>One of the 3 items in the <see cref="T:CCL.GTAIV.PedGender"/> enum.</returns>
        </member>
        <member name="M:CCL.GTAIV.CPedExtensions.GetHeightAboveGround(IVSDKDotNet.CPed)">
            <summary>
            Gets the height above ground of this <see cref="T:IVSDKDotNet.CPed"/>.
            </summary>
            <param name="ped"></param>
            <returns>The height above ground value.</returns>
        </member>
        <member name="M:CCL.GTAIV.CPedExtensions.AttachBlip(IVSDKDotNet.CPed)">
            <summary>
            Attaches a <see cref="T:CCL.GTAIV.NativeBlip"/> to this <see cref="T:IVSDKDotNet.CPed"/>.
            </summary>
            <param name="ped"></param>
            <returns>If successful, the attached <see cref="T:CCL.GTAIV.NativeBlip"/> is returned. Otherwise, <see langword="null"/>.</returns>
        </member>
        <member name="T:CCL.GTAIV.CVehicleExtensions">
            <summary>
            Contains extensions for the <see cref="T:IVSDKDotNet.CVehicle"/> class.
            </summary>
        </member>
        <member name="M:CCL.GTAIV.CVehicleExtensions.GetHandle(IVSDKDotNet.CVehicle)">
            <summary>
            Gets the handle for this <see cref="T:IVSDKDotNet.CVehicle"/>.
            <para>Can be used for calling native functions like <see cref="M:IVSDKDotNet.Native.Natives.IS_CAR_DEAD(System.Int32)"/> which requires a vehicle handle.</para>
            </summary>
            <param name="veh"></param>
            <returns>If successful, the handle of this <see cref="T:IVSDKDotNet.CVehicle"/> is returned. Otherwise, 0.</returns>
        </member>
        <member name="M:CCL.GTAIV.CVehicleExtensions.GetModelRect3D(IVSDKDotNet.CVehicle)">
            <summary>
            Gets the <see cref="T:CCL.GTAIV.Rectangle3D"/> (or bounds) of this <see cref="T:IVSDKDotNet.CVehicle"/> with their current model.
            </summary>
            <param name="veh"></param>
            <returns>If successful, the <see cref="T:CCL.GTAIV.Rectangle3D"/> of this <see cref="T:IVSDKDotNet.CVehicle"/> is returned. Otherwise, <see cref="M:CCL.GTAIV.Rectangle3D.Empty"/> is returned.</returns>
        </member>
        <member name="M:CCL.GTAIV.CVehicleExtensions.AttachBlip(IVSDKDotNet.CVehicle)">
            <summary>
            Attaches a <see cref="T:CCL.GTAIV.NativeBlip"/> to this <see cref="T:IVSDKDotNet.CVehicle"/>.
            </summary>
            <param name="veh"></param>
            <returns>If successful, the attached <see cref="T:CCL.GTAIV.NativeBlip"/> is returned. Otherwise, <see langword="null"/>.</returns>
        </member>
        <member name="T:CCL.GTAIV.VectorExtensions">
            <summary>
            Contains extensions for the <see cref="T:System.Numerics.Vector2"/> or <see cref="T:System.Numerics.Vector3"/> structs.
            </summary>
        </member>
        <member name="M:CCL.GTAIV.VectorExtensions.RandomXYZ(System.Numerics.Vector3)">
            <summary>
            Returns a <see cref="T:System.Numerics.Vector3"/> with random X, Y and Z values.
            </summary>
            <param name="vec"></param>
            <returns>A <see cref="T:System.Numerics.Vector3"/> with random X, Y and Z values.</returns>
        </member>
        <member name="M:CCL.GTAIV.VectorExtensions.RandomXY(System.Numerics.Vector3)">
            <summary>
            Returns a <see cref="T:System.Numerics.Vector3"/> with random X and Y values.
            </summary>
            <param name="vec"></param>
            <returns>A <see cref="T:System.Numerics.Vector3"/> with random X and Y values.</returns>
        </member>
        <member name="M:CCL.GTAIV.VectorExtensions.MoveTowards(System.Numerics.Vector3,System.Numerics.Vector3,System.Single)">
            <summary>
            Calculate a position between the points specified by this <see cref="T:System.Numerics.Vector3"/> and <paramref name="target"/>, moving no farther than the distance specified by <paramref name="maxDistanceDelta"/>.
            </summary>
            <param name="vec">The position to move from.</param>
            <param name="target">The position to move towards.</param>
            <param name="maxDistanceDelta">Distance to move per call.</param>
            <returns>The new position.</returns>
        </member>
        <member name="M:CCL.GTAIV.VectorExtensions.LookAtYaw(System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>
            Calculates the yaw (Look Left/Right) angle from this <see cref="T:System.Numerics.Vector3"/> and the given <paramref name="targetPos"/>.
            </summary>
            <param name="vec"></param>
            <param name="targetPos">The target pos to look at.</param>
            <returns>The calculated yaw angle.</returns>
        </member>
        <member name="M:CCL.GTAIV.VectorExtensions.Around(System.Numerics.Vector3,System.Single)">
            <summary>
            Gets a position around this <see cref="T:System.Numerics.Vector3"/> by the given <paramref name="distance"/>.
            </summary>
            <param name="vec"></param>
            <param name="distance">The around distance.</param>
            <returns>The position around the current <see cref="T:System.Numerics.Vector3"/>.</returns>
        </member>
        <member name="M:CCL.GTAIV.VectorExtensions.ToVector2(System.Numerics.Vector3)">
            <summary>
            Converts this <see cref="T:System.Numerics.Vector3"/> to a <see cref="T:System.Numerics.Vector2"/>.
            </summary>
            <param name="vec"></param>
            <returns>The new <see cref="T:System.Numerics.Vector2"/>.</returns>
        </member>
        <member name="T:CCL.GTAIV.HandleObject">
            <summary>
            A <see cref="T:CCL.GTAIV.HandleObject"/> is an entity which has a <b>handle</b> like the <see cref="T:IVSDKDotNet.CPed"/>, <see cref="T:IVSDKDotNet.CVehicle"/> or the <see cref="T:CCL.GTAIV.NativeBlip"/>.<br/>
            Most native functions require a <b>handle</b> like the <see cref="M:IVSDKDotNet.Native.Natives.DOES_CHAR_EXIST(System.Int32)"/> native, which requries the <b>handle</b> of a <see cref="T:IVSDKDotNet.CPed"/>.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.HandleObject.IsDisposed">
            <summary>
            Gets if this native object was disposed.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.HandleObject.Handle">
            <summary>
            Gets the handle of this native object.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.HandleObject.IsValid">
            <summary>
            Returns <see langword="true"/> if this handle object was not disposed and the <see cref="P:CCL.GTAIV.HandleObject.Handle"/> is not 0.
            </summary>
        </member>
        <member name="M:CCL.GTAIV.HandleObject.Dispose">
            <summary>
            Disposes this native object.
            </summary>
        </member>
        <member name="M:CCL.GTAIV.HandleObject.Exists">
            <summary>
            Checks if this native object still exists.
            </summary>
            <returns>True if native object exists. Otherwise, false.</returns>
        </member>
        <member name="M:CCL.GTAIV.HandleObject.Delete">
            <summary>
            Deletes this native object from the world without disposing.
            </summary>
        </member>
        <member name="M:CCL.GTAIV.HandleObject.GetHashCode">
            <summary>
            Gets the handle of this native object.
            </summary>
            <returns>The handle of this native object.</returns>
        </member>
        <member name="T:CCL.GTAIV.IVAnimSet">
            <summary>
            Represents a GTA IV animation set with all the animation names inside it.
            </summary>
        </member>
        <member name="F:CCL.GTAIV.IVAnimSet.Name">
            <summary>
            Gets the name of this animation set.
            </summary>
        </member>
        <member name="F:CCL.GTAIV.IVAnimSet.AnimNames">
            <summary>
            Gets the collection of animation names inside the animation set.
            </summary>
        </member>
        <member name="M:CCL.GTAIV.IVAnimSet.#ctor(System.String,System.String[])">
            <summary>
            Creates a new <see cref="T:CCL.GTAIV.IVAnimSet"/>.
            </summary>
            <param name="animSetName">The name of the animation set.</param>
            <param name="animNames">The collection of animation names inside the animation set.</param>
        </member>
        <member name="M:CCL.GTAIV.NativeBlip.#ctor(System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:CCL.GTAIV.NativeBlip"/> class with an existing handle.
            </summary>
            <param name="handle">The handle of an already existing blip.</param>
        </member>
        <member name="M:CCL.GTAIV.NativeBlip.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:CCL.GTAIV.NativeBlip.Exists">
            <inheritdoc/>
        </member>
        <member name="M:CCL.GTAIV.NativeBlip.GetAttachedItemHandle">
            <summary>
            Gets the handle of the object this <see cref="T:CCL.GTAIV.NativeBlip"/> is attached to.
            </summary>
            <returns>The handle this <see cref="T:CCL.GTAIV.NativeBlip"/> is attached to..</returns>
        </member>
        <member name="M:CCL.GTAIV.NativeBlip.GetWaypoint">
            <summary>
            Tries to get the waypoint blip. Might actually not really be that efficient.
            </summary>
            <returns>If successful, the waypoint blip is returned. Otherwise, <see langword="null"/>.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativeBlip.AddBlipGangTerritory(System.Numerics.Vector2,System.Drawing.SizeF,System.Drawing.Color)">
            <summary>
            This adds a rectangle to the radar and map in the pause menu as seen in the TLAD Own The City multiplayer game mode.
            </summary>
            <param name="location">The start location of the blip.</param>
            <param name="size">The size of the blip.</param>
            <param name="color">The color of the blip.</param>
            <returns>If successful, the <see cref="T:CCL.GTAIV.NativeBlip"/> is returned. Otherwise, <see langword="null"/>.</returns>
        </member>
        <member name="T:CCL.GTAIV.CameraShakeType">
            <summary>
            Camera shake types.
            </summary>
        </member>
        <member name="T:CCL.GTAIV.CameraShakeBehaviour">
            <summary>
            Camera shake behaviours.
            </summary>
        </member>
        <member name="T:CCL.GTAIV.NativeCamera">
            <summary>
            Gives you access to native functions that involve the camera.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeCamera.Position">
            <summary>
            Gets or sets the position of the camera.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeCamera.Offset">
            <summary>
            Sets the attach offset position of the camera.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeCamera.Rotation">
            <summary>
            Gets or sets the rotation of the camera.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeCamera.FOV">
            <summary>
            Gets or sets the FOV of the camera.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeCamera.NearClip">
            <summary>
            Gets or sets near clip of the camera.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeCamera.FarDoF">
            <summary>
            Gets or sets the far DoF of the camera.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeCamera.NearDoF">
            <summary>
            Gets or sets the near DoF of the camera.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeCamera.IsActive">
            <summary>
            Gets if the camera is active.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeCamera.IsPropagating">
            <summary>
            Gets or sets if the camera is propagating.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeCamera.AttachOffsetIsRelative">
            <summary>
            Sets if the <see cref="P:CCL.GTAIV.NativeCamera.Offset"/> is relative.
            </summary>
        </member>
        <member name="M:CCL.GTAIV.NativeCamera.#ctor(System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:CCL.GTAIV.NativeCamera"/> class with an existing handle.
            </summary>
            <param name="handle">The handle of an already existing camera.</param>
        </member>
        <member name="M:CCL.GTAIV.NativeCamera.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:CCL.GTAIV.NativeCamera.Activate">
            <summary>
            Activates the camera.
            </summary>
        </member>
        <member name="M:CCL.GTAIV.NativeCamera.Deactivate">
            <summary>
            Deactivates the camera.
            </summary>
        </member>
        <member name="M:CCL.GTAIV.NativeCamera.Shake(CCL.GTAIV.CameraShakeType,CCL.GTAIV.CameraShakeBehaviour,System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Shakes the camera with the given attributes.
            </summary>
            <param name="shakeType">The shake type.</param>
            <param name="shakeBehaviour">The shake behaviour.</param>
            <param name="shakeDuration">The shake duration in milliseconds.</param>
            <param name="shakeAmplitude">The shake amplitude.</param>
            <param name="shakeFrequency">The shake frequency.</param>
            <param name="unknown1">Unknown. Usually 0.0f, Sometimes (rarely) up to 0.9f.</param>
        </member>
        <member name="M:CCL.GTAIV.NativeCamera.PointAtCoord(System.Numerics.Vector3)">
            <summary>
            Points the camera at the given position.
            </summary>
            <param name="pos">The position to point at.</param>
        </member>
        <member name="M:CCL.GTAIV.NativeCamera.PointAtPed(System.Int32)">
            <summary>
            Points the camera at the given ped.
            </summary>
            <param name="pedHandle">The handle of the ped to point at.</param>
        </member>
        <member name="M:CCL.GTAIV.NativeCamera.PointAtVehicle(System.Int32)">
            <summary>
            Points the camera at the given vehicle.
            </summary>
            <param name="vehicleHandle">The handle of the vehicle to point at.</param>
        </member>
        <member name="M:CCL.GTAIV.NativeCamera.PointAtObject(System.Int32)">
            <summary>
            Points the camera at the given object.
            </summary>
            <param name="objectHandle">The handle of the object to point at.</param>
        </member>
        <member name="M:CCL.GTAIV.NativeCamera.PointAtCam(System.Int32)">
            <summary>
            Points the camera at the given camera.
            </summary>
            <param name="camHandle">The handle of the camera to point at.</param>
        </member>
        <member name="M:CCL.GTAIV.NativeCamera.Unpoint">
            <summary>
            Unpoints the camera.
            </summary>
        </member>
        <member name="M:CCL.GTAIV.NativeCamera.AttachToVehicle(System.Int32)">
            <summary>
            Attaches the camera to the given vehicle.
            </summary>
            <param name="vehicleHandle">The handle of the vehicle.</param>
        </member>
        <member name="M:CCL.GTAIV.NativeCamera.AttachToObject(System.Int32)">
            <summary>
            Attaches the camera to the given object.
            </summary>
            <param name="objectHandle">The handle of the object.</param>
        </member>
        <member name="M:CCL.GTAIV.NativeCamera.AttachToPed(System.Int32)">
            <summary>
            Attaches the camera to the given ped.
            </summary>
            <param name="pedHandle">The handle of the ped.</param>
        </member>
        <member name="M:CCL.GTAIV.NativeCamera.AttachToViewport(System.Int32)">
            <summary>
            Attaches the camera to the given viewport.
            </summary>
            <param name="viewportHandle">The handle of the viewport.</param>
        </member>
        <member name="M:CCL.GTAIV.NativeCamera.Unattach">
            <summary>
            Detaches the camera.
            </summary>
        </member>
        <member name="M:CCL.GTAIV.NativeCamera.Exists">
            <inheritdoc/>
        </member>
        <member name="M:CCL.GTAIV.NativeCamera.IsSphereVisible(System.Numerics.Vector3,System.Single)">
            <summary>
            Checks if the given position is visible on screen.
            </summary>
            <param name="pos">Target position.</param>
            <param name="radius">Unknown.</param>
            <returns>True if the position is visible. Otherwise, false.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativeCamera.Create(IVSDKDotNet.Enums.eCamType)">
            <summary>
            Creates a new camera.
            </summary>
            <param name="type">The camera type. Usually <see cref="F:IVSDKDotNet.Enums.eCamType.CAM_SCRIPTED"/>.</param>
            <returns>If successful, the newly created camera is returned. Otherwise, false.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativeCamera.Create">
            <summary>
            Creates a new camera of type <see cref="F:IVSDKDotNet.Enums.eCamType.CAM_SCRIPTED"/>.
            </summary>
            <returns>If successful, the newly created camera is returned. Otherwise, false.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativeCamera.GetGameCam">
            <summary>
            Gets the game camera.
            </summary>
            <returns>If successful, the game camera is returned. Otherwise, false.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativeCamera.GetGameCamChild">
            <summary>
            Gets the games camera child.
            </summary>
            <returns>If successful, the games camera child is returned. Otherwise, false.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativeCamera.GetDebugCam">
            <summary>
            Gets the debug camera.
            </summary>
            <returns>If successful, the debug camera is returned. Otherwise, false.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativeCamera.GetCinematicCam">
            <summary>
            Gets the cinematic camera.
            </summary>
            <returns>If successful, the cinematic camera is returned. Otherwise, false.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativeCamera.GetFreeCam">
            <summary>
            Gets the free camera.
            </summary>
            <returns>If successful, the free camera is returned. Otherwise, false.</returns>
        </member>
        <member name="T:CCL.GTAIV.NativeCheckpoint">
            <summary>
            Used to draw a checkpoint in the world.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeCheckpoint.Visible">
            <summary>
            Gets or sets if this checkpoint should be visible.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeCheckpoint.Position">
            <summary>
            Gets or sets the position of this checkpoint.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeCheckpoint.Radius">
            <summary>
            Gets or sets the radius of this checkpoint.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeCheckpoint.Color">
            <summary>
            Gets or sets the color of this checkpoint.
            </summary>
        </member>
        <member name="M:CCL.GTAIV.NativeCheckpoint.#ctor(IVSDKDotNet.Script,System.Numerics.Vector3,System.Single,System.Drawing.Color)">
            <summary>
            Creates a new checkpoint.
            </summary>
            <param name="createFor">The script needed for drawing this checkpoint.</param>
            <param name="pos">The position of this checkpoint.</param>
            <param name="radius">The radius of this checkpoint.</param>
            <param name="color">The color of this checkpoint.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when the createFor parameter is null.</exception>
        </member>
        <member name="M:CCL.GTAIV.NativeCheckpoint.#ctor(IVSDKDotNet.Script)">
            <summary>
            Creates a new checkpoint.
            </summary>
            <param name="createFor">The script needed for drawing this checkpoint.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when the createFor parameter is null.</exception>
        </member>
        <member name="M:CCL.GTAIV.NativeCheckpoint.PlaceOnGroundProperly">
            <summary>
            Places this checkpoint on the ground properly.
            <para>Does only work properly if the area is loaded.</para>
            </summary>
        </member>
        <member name="M:CCL.GTAIV.NativeCheckpoint.DrawCheckpoint(System.Numerics.Vector3,System.Single,System.Drawing.Color)">
            <summary>
            Draws a checkpoint at the given coords, the given radius and color in the world.
            </summary>
            <param name="pos">The position where to draw the checkpoint.</param>
            <param name="radius">The radius of the checkpoint.</param>
            <param name="color">The color of the checkpoint.</param>
        </member>
        <member name="M:CCL.GTAIV.NativeCheckpoint.IsInside(IVSDKDotNet.CPed,System.Boolean)">
            <summary>
            Checks if the given <see cref="T:IVSDKDotNet.CPed"/> is inside this checkpoint.
            </summary>
            <param name="ped">The given <see cref="T:IVSDKDotNet.CPed"/> to check for.</param>
            <param name="ignoreZCoordinate">Sets if the Z coordinate of the given <see cref="T:IVSDKDotNet.CPed"/> should be ignored. If set to <see langword="true"/>, this function will return <see langword="true"/> when the <see cref="T:IVSDKDotNet.CPed"/> is inside the checkpoint no matter the current height.</param>
            <returns>True if the given <see cref="T:IVSDKDotNet.CPed"/> is inside this checkpoint. Otherwise, false.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativeCheckpoint.IsInside(System.Numerics.Vector3,System.Boolean)">
            <summary>
            Checks if the given position is inside this checkpoint.
            </summary>
            <param name="pos">The given position to check for.</param>
            <param name="ignoreZCoordinate">Sets if the Z coordinate of the given <see cref="T:System.Numerics.Vector3"/> should be ignored. If set to <see langword="true"/>, this function will return <see langword="true"/> when the <see cref="T:System.Numerics.Vector3"/> is inside the checkpoint no matter the current height.</param>
            <returns>True if the given position is inside this checkpoint. Otherwise, false.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativeControls.IsControllerButtonPressed(System.UInt32,CCL.GTAIV.ControllerButton)">
            <summary>
            Gets if the given controller button was pressed.
            </summary>
            <param name="padIndex">Target controller. Default is 0.</param>
            <param name="button">Target button.</param>
            <returns>True if the given controller button was pressed. Otherwise, false.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativeControls.GetPressedControllerButton(System.UInt32)">
            <summary>
            Gets the currently pressed controller key.
            </summary>
            <param name="padIndex">Target controller. Default is 0.</param>
            <returns>The pressed controller key. Returns <see cref="F:CCL.GTAIV.ControllerButton.NONE"/> if no button was pressed.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativeControls.IsGameKeyPressed(System.UInt32,CCL.GTAIV.GameKey)">
            <summary>
            Gets if the given game key is pressed.
            </summary>
            <param name="padIndex">Target controller. Default is 0.</param>
            <param name="key">Target key.</param>
            <returns>True if the given key was pressed. Otherwise, false.</returns>
        </member>
        <member name="T:CCL.GTAIV.NativeGame">
            <summary>
            Gives you access to native functions that involve the game.
            </summary>
        </member>
        <member name="F:CCL.GTAIV.NativeGame.IV_GameScripts">
            <summary>A collection of all GTA IV sco script names. Taken from version 1080 of GTA IV.</summary>
        </member>
        <member name="F:CCL.GTAIV.NativeGame.IV_MP_GameScripts">
            <summary>A collection of all GTA IV Multiplayer sco script names. Taken from version 1080 of GTA IV.</summary>
        </member>
        <member name="F:CCL.GTAIV.NativeGame.TBOGT_GameScripts">
            <summary>A collection of all TBoGT sco script names. Taken from version 1080 of GTA IV.</summary>
        </member>
        <member name="F:CCL.GTAIV.NativeGame.TBOGT_MP_GameScripts">
            <summary>A collection of all TBoGT Multiplayer sco script names. Taken from version 1080 of GTA IV.</summary>
        </member>
        <member name="F:CCL.GTAIV.NativeGame.TLAD_GameScripts">
            <summary>A collection of all TLaD sco script names. Taken from version 1080 of GTA IV.</summary>
        </member>
        <member name="F:CCL.GTAIV.NativeGame.TLAD_MP_GameScripts">
            <summary>A collection of all TLaD Multiplayer sco script names. Taken from version 1080 of GTA IV.</summary>
        </member>
        <member name="F:CCL.GTAIV.NativeGame.IV_Animations">
            <summary>A collection of all GTA IV Ped Animation sets and all the animations inside that set.</summary>
        </member>
        <member name="P:CCL.GTAIV.NativeGame.CurrentEpisode">
            <summary>
            Gets the current episode.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeGame.IsMultiplayer">
            <summary>
            Gets if the game is in multiplayer.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeGame.IsRankedMultiplayer">
            <summary>
            Gets if the game is in ranked multiplayer.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeGame.NetworkMode">
            <summary>
            Gets the current network mode.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeGame.NetworkGameMode">
            <summary>
            Gets the current game mode.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeGame.PlayerCount">
            <summary>
            Gets the number of players.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeGame.GameTime">
            <summary>
            Gets how many players there are currently.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeGame.FrameTime">
            <summary>
            Gets the frame time.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeGame.FPS">
            <summary>
            Gets the fps based on the frame time.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeGame.RadioStation">
            <summary>
            Gets or sets the current radio station.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeGame.RadarZoom">
            <summary>
            Sets the zoom of the radar.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeGame.TimeScale">
            <summary>
            Sets the time scale.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeGame.WantedMultiplier">
            <summary>
            Sets the wanted multiplier.
            </summary>
        </member>
        <member name="M:CCL.GTAIV.NativeGame.RequestScript(System.String)">
            <summary>
            Requests a game script (sco).
            </summary>
            <param name="name">The script name without extension.</param>
        </member>
        <member name="M:CCL.GTAIV.NativeGame.MarkScriptAsNoLongerNeeded(System.String)">
            <summary>
            Marks a game script (sco) as no longer needed.
            </summary>
            <param name="name">The script name without extension.</param>
        </member>
        <member name="M:CCL.GTAIV.NativeGame.TerminateScriptsWithThisName(System.String)">
            <summary>
            Terminates all game scripts (sco) with the given name.
            </summary>
            <param name="name">The script name without extension.</param>
        </member>
        <member name="M:CCL.GTAIV.NativeGame.StartNewScript(System.String,System.UInt32)">
            <summary>
            Starts a new game script (sco).
            </summary>
            <param name="name">The script name without extension.</param>
            <param name="stackSize">Usually 1024?</param>
            <returns>Unknown.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativeGame.GetScriptInstances(System.String)">
            <summary>
            Gets how many game scripts (sco) are running.
            </summary>
            <param name="name">The script name without extension.</param>
            <returns>The number of scripts running.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativeGame.DoesScriptExists(System.String)">
            <summary>
            Checks if the given game script (sco) exists.
            </summary>
            <param name="name">The script name without extension.</param>
            <returns>True if the script exists. Otherwise, false.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativeGame.IsScriptRunning(System.String)">
            <summary>
            Gets if the game script (sco) is running.
            </summary>
            <param name="name">The script name without extension.</param>
            <returns>True if the script is running. Otherwise, false.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativeGame.HasScriptLoaded(System.String)">
            <summary>
            Gets if the game script (sco) is loaded.
            </summary>
            <param name="name">The script name without extension.</param>
            <returns>True if the script is loaded. Otherwise, false.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativeGame.GenerateHash(System.String)">
            <summary>
            Generates a hash from the given string.
            <para>Useful for getting the hash for a model from the model's name.</para>
            </summary>
            <param name="str">The string to generate the hash from.</param>
            <returns>The hash from the given string.</returns>
        </member>
        <member name="T:CCL.GTAIV.NativeLight">
            <summary>
            Used to draw a light in the world.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeLight.Visible">
            <summary>
            Gets or sets if this light should be visible.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeLight.Position">
            <summary>
            Gets or sets the position of this light.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeLight.Radius">
            <summary>
            Gets or sets the radius of this light.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeLight.Intensity">
            <summary>
            Gets or sets the intensity of this light.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeLight.Color">
            <summary>
            Gets or sets the color of this light.
            </summary>
        </member>
        <member name="M:CCL.GTAIV.NativeLight.#ctor(IVSDKDotNet.Script,System.Numerics.Vector3,System.Single,System.Single,System.Drawing.Color)">
            <summary>
            Creates a new light.
            </summary>
            <param name="createFor">The script needed for drawing this light.</param>
            <param name="pos">The position of this light.</param>
            <param name="radius">The radius of this light.</param>
            <param name="intensity">The intensity of this light.</param>
            <param name="color">The color of this light.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when the createFor parameter is null.</exception>
        </member>
        <member name="M:CCL.GTAIV.NativeLight.#ctor(IVSDKDotNet.Script)">
            <summary>
            Creates a new light.
            </summary>
            <param name="createFor">The script needed for drawing this light.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when the createFor parameter is null.</exception>
        </member>
        <member name="P:CCL.GTAIV.NativePickup.Position">
            <summary>
            Gets the position of this pickup.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativePickup.HasBeenCollected">
            <summary>
            Gets if this pickup has been collected.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativePickup.DoNotSpawnParkedCarsOnTop">
            <summary>
            Sets if parked cars can spawn on top of this pickup.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativePickup.CollectableByCar">
            <summary>
            Sets if this pickup can be collected by car.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativePickup.RoomHash">
            <summary>
            Gets the current room hash of the pickup.
            </summary>
        </member>
        <member name="M:CCL.GTAIV.NativePickup.#ctor(System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:CCL.GTAIV.NativePickup"/> class with an existing handle.
            </summary>
            <param name="handle">The handle of an already existing pickup.</param>
        </member>
        <member name="M:CCL.GTAIV.NativePickup.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:CCL.GTAIV.NativePickup.AddSimpleBlip">
            <summary>
            Adds a simple blip for this pickup.
            </summary>
        </member>
        <member name="M:CCL.GTAIV.NativePickup.CreatePickup(IVSDKDotNet.Enums.ePickupModel,IVSDKDotNet.Enums.ePickupType,System.Numerics.Vector3)">
            <summary>
            Creates a pickup at the given location.
            </summary>
            <param name="model">The pickup model.</param>
            <param name="type">The pickup type.</param>
            <param name="pos">The pickup location.</param>
            <returns>If successful, the newly created pickup is returned. Otherwise, false.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativePickup.CreatePickup(IVSDKDotNet.Enums.ePickupModel,IVSDKDotNet.Enums.ePickupType,System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>
            Creates a pickup at the given location and rotation.
            </summary>
            <param name="model">The pickup model.</param>
            <param name="type">The pickup type.</param>
            <param name="pos">The pickup location.</param>
            <param name="rot">The pickup rotation.</param>
            <returns>If successful, the newly created pickup is returned. Otherwise, false.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativePickup.CreateWeaponPickup(IVSDKDotNet.Enums.ePickupModel,IVSDKDotNet.Enums.ePickupType,System.UInt32,System.Numerics.Vector3)">
            <summary>
            Creates a weapon pickup at the given location with the given ammo.
            </summary>
            <param name="model">The pickup model.</param>
            <param name="ammo">The pickup ammo amount.</param>
            <param name="type">The pickup type.</param>
            <param name="pos">The pickup location.</param>
            <returns>If successful, the newly created pickup is returned. Otherwise, false.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativePickup.CreateMoneyPickup(System.Numerics.Vector3,System.UInt32)">
            <summary>
            Creates a money pickup at the given location with the given amount.
            </summary>
            <param name="pos">The pickup position.</param>
            <param name="amount">The money amount.</param>
            <returns>If successful, the newly created pickup is returned. Otherwise, false.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativePickup.RenderWeaponPickupsBigger(System.Boolean)">
            <summary>
            Sets if weapon pickups should be rendered bigger in-game.
            </summary>
            <param name="value">True, weapon pickups will render bigger. False, weapon pickups will not render bigger.</param>
        </member>
        <member name="M:CCL.GTAIV.NativePickup.SetAllPickupsOfTypeCollectableByCar(IVSDKDotNet.Enums.ePickupType,System.Boolean)">
            <summary>
            Sets if pickups of the given type can be collected by car.
            </summary>
            <param name="type">The pickup type this should apply on.</param>
            <param name="value">True if pickups of given type will be collectable by car. False if pickups of given type will not be collectable by car.</param>
        </member>
        <member name="M:CCL.GTAIV.NativePickup.SetAlwaysDisplayWeaponPickupMessage(System.Boolean)">
            <summary>
            Probably sets the message that will be displayed when the game asks you to replace the current weapon with the new weapon.
            </summary>
            <param name="value">True if the message should always display. Otherwise, false.</param>
        </member>
        <member name="M:CCL.GTAIV.NativePickup.RemoveAllPickupsOfType(IVSDKDotNet.Enums.ePickupType)">
            <summary>
            Removes all pickups of the given type.
            </summary>
            <param name="type">The target type.</param>
        </member>
        <member name="M:CCL.GTAIV.NativePickup.Exists">
            <inheritdoc/>
        </member>
        <member name="M:CCL.GTAIV.NativePickup.HasPlayerCollectedPickup(System.Int32)">
            <summary>
            Gets if the pickup has been collected by the given player.
            </summary>
            <param name="playerIndex">The player to check on.</param>
            <returns>True if the given player has collected the pickup. Otherwise, false.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativePickup.GetSafePickupPositionAtPos(System.Numerics.Vector3)">
            <summary>
            Gets a safe position for a pickup from the given position.
            </summary>
            <param name="targetPos">Target position to get a safe pickup position from.</param>
            <returns>The safe position.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativePickup.IsAnyPickupAtPos(System.Numerics.Vector3)">
            <summary>
            Gets if any pickup is at the given position.
            </summary>
            <param name="pos">Target position to check for.</param>
            <returns>True if there is any pickup at the position. Otherwise, false.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativePickup.IsMoneyPickupAtPos(System.Numerics.Vector3)">
            <summary>
            Gets if any money pickup is at the given position.
            </summary>
            <param name="pos">Target position to check for.</param>
            <returns>True if there is any money pickup at the position. Otherwise, false.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativePickup.SetPickupsFixCars(System.Boolean)">
            <summary>
            Sets if pickups fix cars.
            </summary>
            <param name="value">True, pickups will fix cars. False, pickups will not fix cars.</param>
        </member>
        <member name="M:CCL.GTAIV.NativePickup.AttachBlip">
            <summary>
            Attaches a <see cref="T:CCL.GTAIV.NativeBlip"/> to this <see cref="T:CCL.GTAIV.NativePickup"/>.
            </summary>
            <returns>If successful, the attached <see cref="T:CCL.GTAIV.NativeBlip"/> is returned. Otherwise, <see langword="null"/>.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativeFire.#ctor(System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:CCL.GTAIV.NativeFire"/> class with an existing handle.
            </summary>
            <param name="handle">The handle of an already existing fire.</param>
        </member>
        <member name="M:CCL.GTAIV.NativeFire.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:CCL.GTAIV.NativeFire.Exists">
            <inheritdoc/>
        </member>
        <member name="M:CCL.GTAIV.NativeFire.IsFireExtinguished">
            <summary>
            Checks if this <see cref="T:CCL.GTAIV.NativeFire"/> is extinguished.
            </summary>
            <returns>True if extinguished. Otherwise, false.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativeFire.GetNumberOfFiresInRange(System.Numerics.Vector3,System.Single)">
            <summary>
            Gets the number of fires that are within this <paramref name="range"/> at the given <paramref name="pos"/>.
            </summary>
            <param name="pos">The position.</param>
            <param name="range">The range.</param>
            <returns>The number of fires.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativeFire.GetNumberOfFiresInArea(System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>
            Gets the number of fires that are within this area.
            </summary>
            <param name="pos1">Position 1</param>
            <param name="pos2">Position 2</param>
            <returns>The number of fires.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativeFire.StartFire(System.Numerics.Vector3,System.UInt32,System.UInt32)">
            <summary>
            Starts a new fire at the given <paramref name="position"/>.
            </summary>
            <param name="position">The position of the fire.</param>
            <param name="numGenerationsAllowed">Undocumented. Usually 5.</param>
            <param name="strength">The strength of the fire. Usually 3.</param>
            <returns>If successful, the newly created fire is returned. Otherwise, false.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativeFire.StartCharFire(IVSDKDotNet.CPed)">
            <summary>
            Starts a new char fire for the specified <paramref name="ped"/>.
            </summary>
            <param name="ped">The <see cref="T:IVSDKDotNet.CPed"/> who should be set on fire.</param>
            <returns>If successful, the newly created fire is returned. Otherwise, false.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativeFire.StartCarFire(IVSDKDotNet.CVehicle)">
            <summary>
            Starts a new car fire for the specified <paramref name="veh"/>.
            </summary>
            <param name="veh">The <see cref="T:IVSDKDotNet.CVehicle"/> who should be set on fire.</param>
            <returns>If successful, the newly created fire is returned. Otherwise, false.</returns>
        </member>
        <member name="T:CCL.GTAIV.NativeWorld">
            <summary>
            Functions that involve stuff with the world. Like spawning things.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeWorld.PedDensity">
            <summary>
            Sets the ped density.
            <para>0.0 is off, 1.0 is default, 2.0 is twice as much as normal, etc.</para>
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeWorld.CarDensity">
            <summary>
            Sets the car density.
            <para>0.0 is off, 1.0 is default, 2.0 is twice as much as normal, etc</para>
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeWorld.ParkedCarDensity">
            <summary>
            Sets the parked car density.
            <para>0.0 is off, 1.0 is default, 2.0 is twice as much as normal, etc</para>
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeWorld.RandomCarDensity">
            <summary>
            Sets the random car density.
            <para>0.0 is off, 1.0 is default, 2.0 is twice as much as normal, etc</para>
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeWorld.AllowRandomTrains">
            <summary>
            Sets if random trains are allowed to appear.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeWorld.AllowRandomBoats">
            <summary>
            Sets if random boats are allowed to appear.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeWorld.AllowAmbientPlanes">
            <summary>
            Sets if ambient planes are allowed to appear.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeWorld.AllowGarbageTrucks">
            <summary>
            Sets if garbage trucks are allowed to appear.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeWorld.GravityEnabled">
            <summary>
            Sets if the gravity should be enabled or not. Some things in the world might not be affected by setting this to <see langword="false"/>.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeWorld.CurrentWeather">
            <summary>
            Gets or sets the current weather in the world.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeWorld.CurrentDayTime">
            <summary>
            Gets or set the current day time in the world.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.NativeWorld.CurrentDate">
            <summary>
            Gets the current date in the world.
            </summary>
        </member>
        <member name="M:CCL.GTAIV.NativeWorld.MuteGameworldAndPositionedRadioForTV(System.Boolean)">
            <summary>
            This function mutes almost all sounds in the game. Some "front end" sounds, like info beeps and cell phone beeps, car radios, cutscenes, and the TV aren't affected. 
            </summary>
            <param name="mute">Sets if the world should be muted or not.</param>
        </member>
        <member name="M:CCL.GTAIV.NativeWorld.AddExplosion(System.Numerics.Vector3)">
            <summary>
            Creates an explosion at the given postition.
            </summary>
            <param name="pos">The explosion position.</param>
        </member>
        <member name="M:CCL.GTAIV.NativeWorld.AddExplosion(System.Numerics.Vector3,IVSDKDotNet.Enums.eExplosion,System.Single)">
            <summary>
            Creates an explosion at the given postition.
            </summary>
            <param name="pos">The explosion position.</param>
            <param name="type">The explosion type.</param>
            <param name="radius">The explosion radius.</param>
        </member>
        <member name="M:CCL.GTAIV.NativeWorld.AddExplosion(System.Numerics.Vector3,IVSDKDotNet.Enums.eExplosion,System.Single,System.Boolean,System.Boolean,System.Single)">
            <summary>
            Creates an explosion at the given postition.
            </summary>
            <param name="pos">The explosion position.</param>
            <param name="type">The explosion type.</param>
            <param name="radius">The explosion radius.</param>
            <param name="playSound">Sets if the explosion plays sound.</param>
            <param name="noVisual">Sets if the explosion should be invisible.</param>
            <param name="camShake">Sets how much the cam will shake.</param>
        </member>
        <member name="M:CCL.GTAIV.NativeWorld.SetDoorState(System.UInt32,System.Numerics.Vector3,System.Boolean,System.Single)">
            <summary>
            Sets the state of the closest door with the given model.
            </summary>
            <param name="model">Model of the nearby door.</param>
            <param name="pos">Position close to the door.</param>
            <param name="locked">The door cannot be moved when locked.</param>
            <param name="angle">The current door angle. 0 is closed, 1 is open, -1 is open to the other direction.</param>
        </member>
        <member name="M:CCL.GTAIV.NativeWorld.LoadEnvironmentNow(System.Numerics.Vector3)">
            <summary>
            Loads the environment at the given position.
            <para>Warning: Can cause a freeze for a few seconds.</para>
            </summary>
            <param name="pos">The target position.</param>
        </member>
        <member name="M:CCL.GTAIV.NativeWorld.SpawnPed(System.String,IVSDKDotNet.GTAMatrix,System.Int32@,System.Boolean,System.Boolean)">
            <summary>
            Creates a new ped with the given model name at the given position.
            </summary>
            <param name="modelName">The model name of the ped.</param>
            <param name="position">The position of the ped.</param>
            <param name="handle">Returns the handle of the ped if the function succeeded. The handle can be used with all sorts of native functions that want the handle of a ped.</param>
            <param name="addToWorld">Sets if the ped should be added to the world. Default is true.</param>
            <param name="setAsMissionPed">Sets if the ped should be marked as a mission ped. This will prevent the ped from despawning. Default is false.</param>
            <returns>If successful, the newly created <see cref="T:IVSDKDotNet.CPed"/> is returned. Otherwise, null.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativeWorld.SpawnPed(System.String,System.Numerics.Vector3,System.Int32@,System.Boolean,System.Boolean)">
            <summary>
            Creates a new ped with the given model name at the given position.
            </summary>
            <param name="modelName">The model name of the ped.</param>
            <param name="position">The position of the ped.</param>
            <param name="handle">Returns the handle of the ped if the function succeeded. The handle can be used with all sorts of native functions that want the handle of a ped.</param>
            <param name="addToWorld">Sets if the ped should be added to the world. Default is true.</param>
            <param name="setAsMissionPed">Sets if the ped should be marked as a mission ped. This will prevent the ped from despawning. Default is false.</param>
            <returns>If successful, the newly created <see cref="T:IVSDKDotNet.CPed"/> is returned. Otherwise, null.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativeWorld.SpawnPed(System.UInt32,IVSDKDotNet.GTAMatrix,System.Int32@,System.Boolean,System.Boolean)">
            <summary>
            Creates a new ped with the given model hash at the given position.
            </summary>
            <param name="model">The model hash of the ped.</param>
            <param name="position">The position of the ped.</param>
            <param name="handle">Returns the handle of the ped if the function succeeded. The handle can be used with all sorts of native functions that want the handle of a ped.</param>
            <param name="addToWorld">Sets if the ped should be added to the world. Default is true.</param>
            <param name="setAsMissionPed">Sets if the ped should be marked as a mission ped. This will prevent the ped from despawning. Default is false.</param>
            <returns>If successful, the newly created <see cref="T:IVSDKDotNet.CPed"/> is returned. Otherwise, null.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativeWorld.SpawnPed(System.UInt32,System.Numerics.Vector3,System.Int32@,System.Boolean,System.Boolean)">
            <summary>
            Creates a new ped with the given model hash at the given position.
            </summary>
            <param name="model">The model hash of the ped.</param>
            <param name="position">The position of the ped.</param>
            <param name="handle">Returns the handle of the ped if the function succeeded. The handle can be used with all sorts of native functions that want the handle of a ped.</param>
            <param name="addToWorld">Sets if the ped should be added to the world. Default is true.</param>
            <param name="setAsMissionPed">Sets if the ped should be marked as a mission ped. This will prevent the ped from despawning. Default is false.</param>
            <returns>If successful, the newly created <see cref="T:IVSDKDotNet.CPed"/> is returned. Otherwise, null.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativeWorld.SpawnVehicle(System.String,IVSDKDotNet.GTAMatrix,System.Int32@,System.Boolean,System.Boolean)">
            <summary>
            Creates a new vehicle with the given model name at the given position.
            </summary>
            <param name="modelName">The model name of the vehicle.</param>
            <param name="position">The position of the vehicle.</param>
            <param name="handle">Returns the handle of the vehicle if the function succeeded. The handle can be used with all sorts of native functions that want the handle of a vehicle.</param>
            <param name="addToWorld">Sets if the vehicle should be added to the world. Default is true.</param>
            <param name="setAsMissionVehicle">Sets if the vehicle should be marked as a mission vehicle. This will prevent the vehicle from despawning. Default is false.</param>
            <returns>If successful, the newly created <see cref="T:IVSDKDotNet.CVehicle"/> is returned. Otherwise, null.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativeWorld.SpawnVehicle(System.String,System.Numerics.Vector3,System.Int32@,System.Boolean,System.Boolean)">
            <summary>
            Creates a new vehicle with the given model name at the given position.
            </summary>
            <param name="modelName">The model name of the vehicle.</param>
            <param name="position">The position of the vehicle.</param>
            <param name="handle">Returns the handle of the vehicle if the function succeeded. The handle can be used with all sorts of native functions that want the handle of a vehicle.</param>
            <param name="addToWorld">Sets if the vehicle should be added to the world. Default is true.</param>
            <param name="setAsMissionVehicle">Sets if the vehicle should be marked as a mission vehicle. This will prevent the vehicle from despawning. Default is false.</param>
            <returns>If successful, the newly created <see cref="T:IVSDKDotNet.CVehicle"/> is returned. Otherwise, null.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativeWorld.SpawnVehicle(System.UInt32,IVSDKDotNet.GTAMatrix,System.Int32@,System.Boolean,System.Boolean)">
            <summary>
            Creates a new vehicle with the given model hash at the given position.
            </summary>
            <param name="model">The model hash of the vehicle.</param>
            <param name="position">The position of the vehicle.</param>
            <param name="handle">Returns the handle of the vehicle if the function succeeded. The handle can be used with all sorts of native functions that want the handle of a vehicle.</param>
            <param name="addToWorld">Sets if the vehicle should be added to the world. Default is true.</param>
            <param name="setAsMissionVehicle">Sets if the vehicle should be marked as a mission vehicle. This will prevent the vehicle from despawning. Default is false.</param>
            <returns>If successful, the newly created <see cref="T:IVSDKDotNet.CVehicle"/> is returned. Otherwise, null.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativeWorld.SpawnVehicle(System.UInt32,System.Numerics.Vector3,System.Int32@,System.Boolean,System.Boolean)">
            <summary>
            Creates a new vehicle with the given model hash at the given position.
            </summary>
            <param name="model">The model hash of the vehicle.</param>
            <param name="position">The position of the vehicle.</param>
            <param name="handle">Returns the handle of the vehicle if the function succeeded. The handle can be used with all sorts of native functions that want the handle of a vehicle.</param>
            <param name="addToWorld">Sets if the vehicle should be added to the world. Default is true.</param>
            <param name="setAsMissionVehicle">Sets if the vehicle should be marked as a mission vehicle. This will prevent the vehicle from despawning. Default is false.</param>
            <returns>If successful, the newly created <see cref="T:IVSDKDotNet.CVehicle"/> is returned. Otherwise, null.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativeWorld.GetClosestPed(System.Numerics.Vector3,System.Single,System.Int32,System.Int32)">
            <summary>
            Doesn't always work so well.
            </summary>
            <param name="position">The postition to search for peds.</param>
            <param name="radius">The radius to search for the closest ped.</param>
            <param name="unk1">Undocumented. Usually 0 or 1.</param>
            <param name="unk2">Undocumented. Usually 0 or 1.</param>
            <returns>If successful, the closest <see cref="T:IVSDKDotNet.CPed"/> is returned. Otherwise, null.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativeWorld.GetStreetName(System.Numerics.Vector3)">
            <summary>
            This gets the street name at the given position.
            </summary>
            <param name="pos">The target position to get the street name from.</param>
            <returns>The street name.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativeWorld.GetStreetName(System.Numerics.Vector3,System.String@)">
            <summary>
            This gets the street name at the given position.
            </summary>
            <param name="pos">The target position to get the street name from.</param>
            <param name="name1">Not guaranteed to have something in it.</param>
            <returns>Guaranteed to return something.</returns>
        </member>
        <member name="M:CCL.GTAIV.NativeWorld.GetPositionOnStreet(System.Numerics.Vector3,System.Single)">
            <summary>
            Gets the next position on street at the given <paramref name="pos"/>.
            </summary>
            <param name="pos">The position to get the next street position from.</param>
            <param name="radius">The radius to check for if the new position if obscured by a mission entity. If the position is obscured, this function will check for the next nearest position on street.</param>
            <returns>The position.</returns>
        </member>
        <member name="T:CCL.GTAIV.NewsScrollbar">
            <summary>
            Stuff for the news scrollbar in The Triangle, south of Star Junction.
            </summary>
        </member>
        <member name="M:CCL.GTAIV.NewsScrollbar.AddStringToNewsScrollbar(System.String)">
            <summary>
            This method adds a string to the news scrollbar as seen in The Triangle, south of Star Junction.<br/>
            It's recommended to call <see cref="M:CCL.GTAIV.NewsScrollbar.ClearNewsScrollbar"/> before calling this function. If you don't, the string will be added next to the previous one that was created.
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:CCL.GTAIV.NewsScrollbar.ClearNewsScrollbar">
            <summary>
            This method removes all text from the news scrollbar as seen in The Triangle, south of Star Junction.
            </summary>
        </member>
        <member name="T:CCL.GTAIV.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:CCL.GTAIV.Properties.Resources.IV_MP_Scripts">
             <summary>
               Looks up a localized string similar to carsteal
            coop_bombdbase
            coop_drugfac
            coop_swatasslt
            deathmatch_cr
            freemode_cr
            initialnet
            mpcellphone
            mpcellphonecalling
            mpcellphonemain
            mpcellphonenetwork
            mpcellphoneparty
            network_main
            network_startup
            party_mode
            races_cr
            roving_cr
            speechcontrol_net
            tm_base
            tm_vip
            txtlnkmiss_net
            .
             </summary>
        </member>
        <member name="P:CCL.GTAIV.Properties.Resources.IV_Scripts">
             <summary>
               Looks up a localized string similar to advanced_car_actions
            ambairpotarea
            ambatmq
            ambbar
            ambbarrier
            ambbeggar
            ambblkhawk
            ambbouncer
            ambbridgepatrol
            ambbusker
            ambcabaret
            ambcargoholddoors
            ambchurchdoors
            ambclublights
            ambcomedyclub
            ambcontrolloader
            ambcontrolmain
            ambdealer
            ambdebug
            ambfloater
            ambgerry3doorlock
            ambhelicopter
            ambhomelandcordon
            ambhomelandfed
            ambhomelandsirens
            ambhotel
            ambinternetcafe
            ambjerseydocksgates
            ambjimslocks
            ambliftdoors
            ambnightclubext
            ambpimpnpros
            ambpoledancer
            ambpolrdblk
            ambpreacher
            amb [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:CCL.GTAIV.Properties.Resources.TBOGT_MP_Scripts">
             <summary>
               Looks up a localized string similar to basejumplauncher_mp
            debug_net
            e2_deathmatch
            e2_freemode
            e2_party_mode
            e2_quickdm
            e2_races
            initialnet
            mpcellphone
            mpcellphonecalling
            mpcellphonemain
            mpcellphonenetwork
            mpcellphoneparty
            network_main
            network_session_net
            network_startup
            parachutelauncher_mp
            parachute_player_mp
            speechcontrol_net
            .
             </summary>
        </member>
        <member name="P:CCL.GTAIV.Properties.Resources.TBOGT_Scripts">
             <summary>
               Looks up a localized string similar to ability_backup
            ability_bomb
            ability_gun_car
            ability_vehicle
            advanced_car_actions
            air_hockey
            air_hockey_trigger
            ambairpotarea
            ambatmq
            ambbar
            ambbarrier
            ambbeggar
            ambblkhawk
            ambbouncer
            ambbridgepatrol
            ambbusker
            ambcabaret
            ambcargoholddoors
            ambchurchdoors
            ambclublights
            ambcomedyclub
            ambcontrolloader
            ambcontrolmain
            ambdealer
            ambdebug
            ambdrinking
            ambfloater
            ambfoodeating
            ambfunfair
            ambgerry3doorlock
            ambhelicopter
            ambhomelandcordon
            ambhotel
            ambinternetcafe
            ambjerseydocksgates
            am [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:CCL.GTAIV.Properties.Resources.TLAD_MP_Scripts">
             <summary>
               Looks up a localized string similar to car_dmge_wdgt_net
            car_rec_wdgt_net
            creator_debug_net
            debug_net
            drawrect_debug_net
            drawsprit_debug_net
            drawtext_debug_net
            e1_chapter
            e1_chopper
            e1_deathmatch
            e1_destroyvan
            e1_freemode
            e1_mostwanted
            e1_party_mode
            e1_quickdm
            e1_races
            e1_turfwar
            initialnet
            locates_debug_net
            locates_widget_net
            mpcellphone
            mpcellphonecalling
            mpcellphonemain
            mpcellphonenetwork
            mpcellphoneparty
            network_main
            network_session_net
            network_startup
            offset_widget_net
            places_debug_net
            races_debug_net
            scrguide [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:CCL.GTAIV.Properties.Resources.TLAD_Scripts">
             <summary>
               Looks up a localized string similar to ability_backup
            ability_bomb
            ability_gun_car
            ability_stats
            ability_vehicle
            abil_weap_pickup
            advanced_car_actions
            air_hockey
            air_hockey_trigger
            ambairpotarea
            ambatmq
            ambbar
            ambbarrier
            ambbeggar
            ambblkhawk
            ambbouncer
            ambbridgepatrol
            ambbusker
            ambcabaret
            ambcargoholddoors
            ambchurchdoors
            ambclubhouse
            ambclublights
            ambcomedyclub
            ambcontrolloader
            ambcontrolmain
            ambdealer
            ambfloater
            ambgentlemansclub
            ambgerry3doorlock
            ambhelicopter
            ambhomelandcordon
            ambhomelandfed
            ambhomelandsirens
             [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="M:CCL.GTAIV.Rectangle3D.#ctor(System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>
            Creates a new <see cref="T:CCL.GTAIV.Rectangle3D"/>.
            </summary>
            <param name="center">The center/initial position.</param>
            <param name="size">The size of this <see cref="T:CCL.GTAIV.Rectangle3D"/>.</param>
        </member>
        <member name="M:CCL.GTAIV.Rectangle3D.Visualize(System.Single,System.Single)">
            <summary>
            Visualizes the bounds of this <see cref="T:CCL.GTAIV.Rectangle3D"/>. This needs to be called in a loop, like from your <see cref="E:IVSDKDotNet.Script.Tick"/> event.<br/>
            The center of the <see cref="T:CCL.GTAIV.Rectangle3D"/> is gonna be orange, and the corners are gonne be magenta.
            </summary>
            <param name="centerSize">The size of the corona that represents the <see cref="P:CCL.GTAIV.Rectangle3D.Center"/> of this <see cref="T:CCL.GTAIV.Rectangle3D"/>.</param>
            <param name="cornerSize">The size of the corona that represents the corners of this <see cref="T:CCL.GTAIV.Rectangle3D"/>.</param>
        </member>
        <member name="M:CCL.GTAIV.Rectangle3D.Intersects(CCL.GTAIV.Rectangle3D)">
            <summary>
            Checks if the given <see cref="T:CCL.GTAIV.Rectangle3D"/> is intersects with this <see cref="T:CCL.GTAIV.Rectangle3D"/>.
            </summary>
            <param name="bounds">The <see cref="T:CCL.GTAIV.Rectangle3D"/> to check.</param>
            <returns>True if they intersect. Otherwise, false.</returns>
        </member>
        <member name="M:CCL.GTAIV.Rectangle3D.Empty">
            <summary>
            Returns an empty <see cref="T:CCL.GTAIV.Rectangle3D"/>.
            </summary>
            <returns>An empty <see cref="T:CCL.GTAIV.Rectangle3D"/>.</returns>
        </member>
        <member name="F:CCL.GTAIV.TaskController.PedTaskController.MAX_DURATION">
            <summary>1 Hour</summary>
        </member>
    </members>
</doc>
